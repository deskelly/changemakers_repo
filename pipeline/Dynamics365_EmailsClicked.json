{
	"name": "Dynamics365_EmailsClicked",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"description": "",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Create index",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Dynamics365_GetEmailsSent",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "csv/EmailSent",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "UsageType",
												"type": "String"
											},
											"sink": {
												"name": "usage_type"
											}
										},
										{
											"source": {
												"name": "InteractionType",
												"type": "String"
											},
											"sink": {
												"name": "interaction_type"
											}
										},
										{
											"source": {
												"name": "EmailAddressUsed",
												"type": "String"
											},
											"sink": {
												"name": "email_address_used"
											}
										},
										{
											"source": {
												"name": "Timestamp",
												"type": "String"
											},
											"sink": {
												"name": "time_stamp"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Dynamics365_GetEmailsSent",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Dynamics365_EmailsSent_AzureSqlTable",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Delete Temp table if exists",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "drop table if exists Temp_Raw_Dynamics365_SentEmails"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Delete Temp table if exists",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE TABLE Temp_Raw_Dynamics365_SentEmails(\n\tusage_type varchar(80) NULL,\n\tinteraction_type varchar(80) NULL,\n\temail_address_used varchar(120) NULL,\n\ttime_stamp varchar(40) NULL,\n)"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create index",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create table",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE INDEX ts_202311141313 ON Temp_Raw_Dynamics365_SentEmails (time_stamp)"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Main Update",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Changemakers",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "with grp_data as (\nselect \n    cast(time_stamp as date) as date\nfrom Temp_Raw_Dynamics365_SentEmails\nwhere usage_type != 'TestSend'\n)\n, final_table as (\n    select\n        date\n        , count(1) as no_emails_sent\n    from grp_data\n    where date >= '2022-10-01'\n    group by date\n)\n\nMERGE INTO Changemakers_Combined_Overview a\nUSING final_table b\n    ON a.channel = 'Emails' \n    and a.sub_channel = 'Emails from Dynamics 365'\n    and a.date = b.date \nWHEN MATCHED THEN\n  UPDATE SET \n        a.impression_by_date  = b.no_emails_sent \nWHEN NOT MATCHED THEN\n  INSERT (channel,sub_channel,date,timestamp,month,week,impression_by_date)\n  VALUES (\n        'Emails'\n        , 'Emails from Dynamics 365'\n        , b.date \n        , b.date\n        , cast(format(b.date, 'yyyyMM') as int)\n        , cast(concat(left(b.date,4),  right(datepart(ww, b.date) + 100, 2)) as int)\n        , b.no_emails_sent\n        );"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Delete Temp table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Main Update",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "drop table if exists Temp_Raw_Dynamics365_SentEmails"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"episodeName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Dynamics365"
		},
		"annotations": [],
		"lastPublishTime": "2023-10-23T11:09:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}