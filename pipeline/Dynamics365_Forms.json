{
	"name": "Dynamics365_Forms",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"description": "",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Create index",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Dynamics365_GetForms",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Data flow1",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Dynamics365_GetForms_DataFlow",
									"type": "DataFlowReference"
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "Delete Temp table if exists",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "drop table if exists Temp_Raw_Dynamics365_Forms;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Delete Temp table if exists",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE TABLE Temp_Raw_Dynamics365_Forms(\n\ttime_stamp varchar(40) NULL\n  , content varchchar(80) NULL\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create index",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create table",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE INDEX ts_202311241638 ON Temp_Raw_Dynamics365_Forms (time_stamp);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Main Update",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Changemakers",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "with date_check as (\nselect \n  time_stamp\n  , isDate(time_stamp) as chk\nfrom Temp_Raw_Dynamics365_Forms\n)\n, date_extract as (\n  select \n    case when chk = 1 then cast(time_stamp as datetime) else null end as time_stamp\n  from date_check\n  where chk = 1 \n)\n, final_table as (\n  select \n    time_stamp\n    , count(1) as no_forms\n  from date_extract\n  where time_stamp >= '2022-10-01 00:00:00'\n  group by time_stamp\n)  \n\nMERGE INTO Changemakers_Combined_Overview a\nUSING final_table b\n    ON a.channel = 'eLearning' \n    and a.sub_channel = 'Dynamics 365 Forms'\n    and a.date = b.date \nWHEN MATCHED THEN\n  UPDATE SET \n        a.conversion_total_clicks  = b.no_emails_clicked \nWHEN NOT MATCHED THEN\n  INSERT (channel,sub_channel, content, date,month,month_year,week,day_week,week_type,time_day,impression_by_date, users_by_date)\n  VALUES (\n        'eLearning'\n        , 'Dynamics 365 Forms'\n        , null as content\n        , b.date\n        , datename(month, b.date)\n        , concat(datename(month, b.date), ' ', year(b.date))\n        , concat(datename(month, b.date), ' ', year(b.date), ' Week ', (DATEPART(week, b.date) - DATEPART(week, DATEADD(day, 1, EOMONTH(b.date, -1)))) + 1)\n        , datename(dw, b.date)\n        , case when datename(dw, b.date) in ('Saturday', 'Sunday') then 'Weekend' else 'Weekday' end\n        , case \n            when cast(b.date as time) between '05:00:00' and '08:59:59' then 'Morning Commute' \n            when cast(b.date as time) between '09:00:00' and '11:59:59' then 'Mid Morning' \n            when cast(b.date as time) between '12:00:00' and '15:59:59' then 'Afternoon' \n            when cast(b.date as time) between '16:00:00' and '18:59:59' then 'Morning Commute' \n            when cast(b.date as time) between '19:00:00' and '23:59:59' then 'Late Evening' \n            when cast(b.date as time) between '00:00:00' and '04:59:59' then 'Night' \n          end\n        , 'Rishi Padda'\n        , b.no_forms\n        , b.no_forms\n        );"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Delete Temp table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Main Update",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Dynamics365_LS_EmailsSent_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "drop table if exists Temp_Raw_Dynamics365_Forms;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"episodeName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Dynamics365_Forms"
		},
		"annotations": [],
		"lastPublishTime": "2023-10-23T11:09:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}