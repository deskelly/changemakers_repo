{
	"name": "Vimeo",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"description": "",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "des",
						"value": "dsad"
					}
				],
				"typeProperties": {
					"dataset": {
						"referenceName": "Vimeo_GetFiles",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@addDays(utcNow(), -20)",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Data flow1",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Vimeo_DataFlow",
									"type": "DataFlowReference"
								},
								"compute": {
									"coreCount": 16,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "Update Digital Changemakers Hub",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Changemakers",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "with ga_vimeo_extract as (\n    select\n        date\n        , sum(finishes) as finishes\n        , sum(plays) as plays\n        , sum(loads) as loads\n    from Raw_Vimeo\n    group by date\n)\n, final_table as (\n    select \n        date\n        , finishes as listened_watched_full_podcast_episode \n        , case when loads > 0 then (plays / loads * 100) else 0 end as video_view_rate\n        , case when plays > 0 then (finishes / plays * 100) else 0 end as video_completion_rate \n    from ga_vimeo_extract\n    where (finishes + plays + loads) > 0\n)\n-- select * from final_table   \n\nMERGE INTO Changemakers_Combined_Overview a\nUSING final_table b\n    ON a.channel = 'Website' \n    and a.sub_channel = 'Digital Changemakers Hub'\n    and a.date = b.date \nWHEN MATCHED THEN\n  UPDATE SET \n        a.listened_watched_full_podcast_episode  = b.listened_watched_full_podcast_episode \n        , a.video_view_rate  = b.video_view_rate \n        , a.video_completion_rate  = b.video_completion_rate \nWHEN NOT MATCHED THEN\n  INSERT (channel,sub_channel,date,timestamp,month,week,listened_watched_full_podcast_episode,video_view_rate,video_completion_rate)\n  VALUES (\n        'Website'\n        , 'Digital Changemakers Hub'\n        , b.date \n        , b.date\n        , cast(format(b.date, 'yyyyMM') as int)\n        , cast(concat(left(b.date,4),  right(datepart(ww, b.date) + 100, 2)) as int)\n        , b.listened_watched_full_podcast_episode\n        , b.video_view_rate\n        , b.video_completion_rate\n        );"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "Vimeo"
		},
		"annotations": [],
		"lastPublishTime": "2023-10-23T11:09:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}