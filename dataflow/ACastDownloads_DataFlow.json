{
	"name": "ACastDownloads_DataFlow",
	"properties": {
		"folder": {
			"name": "ACast"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ACastDownloads_GetFiles",
						"type": "DatasetReference"
					},
					"name": "SourceProcessFiles"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ACastDownloads_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date as string,",
				"          Downloads as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceProcessFiles",
				"SourceProcessFiles derive(Date = toDate(Date, 'yyyy-MM-dd'),",
				"          Downloads = toInteger(Downloads)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     postSQLs:['delete from Raw_LinkedinVisitors where \\ndate in (select distinct date from Temp_Raw_LinkedinVisitors where date is not null)','insert into Raw_LinkedinVisitors\\nselect * from Temp_Raw_LinkedinVisitors where date is not null','drop table if exists Temp_Raw_LinkedinVisitors'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Date,",
				"          Downloads",
				"     )) ~> sink1"
			]
		}
	}
}