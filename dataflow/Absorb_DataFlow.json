{
	"name": "Absorb_DataFlow",
	"properties": {
		"folder": {
			"name": "Absorb"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Absorb_GetFiles",
						"type": "DatasetReference"
					},
					"name": "SourceProcessFiles"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Absorb_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {Last Name} as string,",
				"          {First Name} as string,",
				"          Department as string,",
				"          {Date Completed} as string,",
				"          {Attained Certificate} as string,",
				"          {Certificate Date} as string,",
				"          Status as string,",
				"          Progress as string,",
				"          {Job Title} as string,",
				"          {Time Spent (min)} as string,",
				"          {Date Enrolled} as string,",
				"          {Last Logged In} as string,",
				"          {Email Address} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     purgeFiles: true) ~> SourceProcessFiles",
				"SourceProcessFiles sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     postSQLs:['truncate table Raw_Absorb','insert into Raw_Absorb\\n    select \\n        last_name\\n        , first_name\\n        , department\\n        , try_convert(datetime, date_completed, 103) as date_completed\\n        , attained_certificate\\n        , certificate_date\\n        , status\\n        , cast(progress as decimal(10,4)) as progress\\n        , job_title\\n        , cast(time_spent_min as int) as time_spent_min\\n        , try_convert(date, date_enrolled, 103) as date_enrolled\\n        , try_convert(datetime, last_logged_in, 103) as last_logged_in\\n        , email_address\\nfrom Temp_Raw_Absorb','delete from Changemakers_Combined_Overview where sub_channel = \\'Absorb\\'','with run_tot as (\\n    select\\n        job_title\\n        , time_spent_min\\n        , date_enrolled\\n    from Raw_Absorb\\n)\\ninsert into Changemakers_Combined_Overview (channel,sub_channel,date,timestamp,month,week, impression_by_date, users_by_date, day_week, marketer_job_titles_by_date,time_spent_on_site_page_podcast_vodcast)\\n    select\\n        \\'eLearning\\' as \\'channel\\'\\n        ,\\'Absorb\\' as \\'sub_channel\\'\\n        , date_enrolled \\n        , date_enrolled as timestamp\\n        , cast(format(date_enrolled, \\'yyyyMM\\') as int) as month\\n        , cast(concat(left(date_enrolled,4),  right(datepart(ww, date_enrolled) + 100, 2)) as int) as week\\n        , 1 as impression_by_date\\n        , 1 as users_by_date\\n        , datepart(dw, date_enrolled) as day_week\\n        , job_title as marketer_job_titles_by_date\\n        , time_spent_min as time_spent_on_site_page_podcast_vodcast\\n    from run_tot\\n    order by date_enrolled','drop table if exists Temp_Raw_Absorb'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          last_name = {Last Name},",
				"          first_name = {First Name},",
				"          department = Department,",
				"          date_completed = {Date Completed},",
				"          attained_certificate = {Attained Certificate},",
				"          certificate_date = {Certificate Date},",
				"          status = Status,",
				"          progress = Progress,",
				"          job_title = {Job Title},",
				"          time_spent_min = {Time Spent (min)},",
				"          date_enrolled = {Date Enrolled},",
				"          last_logged_in = {Last Logged In},",
				"          email_address = {Email Address}",
				"     )) ~> sink1"
			]
		}
	}
}