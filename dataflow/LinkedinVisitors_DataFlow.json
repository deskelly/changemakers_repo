{
	"name": "LinkedinVisitors_DataFlow",
	"properties": {
		"folder": {
			"name": "Linkedin"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LinkedinVisitors_GetFiles",
						"type": "DatasetReference"
					},
					"name": "SourceProcessFiles"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "LinkedinFollowers_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Date as date 'MM/dd/yyyy',",
				"          {Overview page views (desktop)} as integer,",
				"          {Overview page views (mobile)} as integer,",
				"          {Overview page views (total)} as integer,",
				"          {Overview unique visitors (desktop)} as integer,",
				"          {Overview unique visitors (mobile)} as integer,",
				"          {Overview unique visitors (total)} as integer,",
				"          {Life page views (desktop)} as integer,",
				"          {Life page views (mobile)} as integer,",
				"          {Life page views (total)} as integer,",
				"          {Life unique visitors (desktop)} as integer,",
				"          {Life unique visitors (mobile)} as integer,",
				"          {Life unique visitors (total)} as integer,",
				"          {Jobs page views (desktop)} as integer,",
				"          {Jobs page views (mobile)} as integer,",
				"          {Jobs page views (total)} as integer,",
				"          {Jobs unique visitors (desktop)} as integer,",
				"          {Jobs unique visitors (mobile)} as integer,",
				"          {Jobs unique visitors (total)} as integer,",
				"          {Total page views (desktop)} as integer,",
				"          {Total page views (mobile)} as integer,",
				"          {Total page views (total)} as integer,",
				"          {Total unique visitors (desktop)} as integer,",
				"          {Total unique visitors (mobile)} as integer,",
				"          {Total unique visitors (total)} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceProcessFiles",
				"SourceProcessFiles sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     postSQLs:['delete from Raw_LinkedinFollowers where \\ndate in (select distinct date from Temp_Raw_LinkedinFollowers where date is not null)','insert into Raw_LinkedinFollowers\\nselect * from Temp_Raw_LinkedinFollowers','drop table if exists Temp_Raw_LinkedinFollowers'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          date = Date,",
				"          sponsored_followers = {Sponsored followers},",
				"          organic_followers = {Organic followers},",
				"          total_followers = {Total followers}",
				"     )) ~> sink1"
			]
		}
	}
}