{
	"name": "GA_Snapshot_DataFlow",
	"properties": {
		"description": "The derived column and window components have been added to calculated the unique row index i.e rowNumber()",
		"folder": {
			"name": "GoogleAnalytics"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GA_Snapshot_GetFiles",
						"type": "DatasetReference"
					},
					"name": "SourceProcessFiles"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "GA_Snapshot_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     purgeFiles: true,",
				"     partitionBy('hash', 1)) ~> SourceProcessFiles",
				"SourceProcessFiles derive(order_id = 1) ~> derivedColumn1",
				"derivedColumn1 window(over(order_id),",
				"     asc(order_id, true),",
				"     id = rowNumber()) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['drop table if exists Temp_Raw_GA_Snapshot','CREATE TABLE Temp_Raw_GA_Snapshot(\\n     Column_1 varchar(80) null\\n     , Column_2 varchar(80) null\\n     , Column_3 varchar(80) null\\n     , Column_4 varchar(80) null\\n     , Column_5 varchar(80) null\\n     , Column_6 varchar(80) null\\n     , Column_7 varchar(80) null\\n    , id int not null\\n)'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Column_1,",
				"          Column_2,",
				"          Column_3,",
				"          Column_4,",
				"          id",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}