{
	"name": "GA_Snapshot_DataFlow",
	"properties": {
		"description": "The derived column and window components have been added to calculated the unique row index i.e rowNumber()",
		"folder": {
			"name": "GoogleAnalytics"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GA_Snapshot_GetFiles",
						"type": "DatasetReference"
					},
					"name": "SourceProcessFiles"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "GA_Snapshot_AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     purgeFiles: true,",
				"     partitionBy('hash', 1)) ~> SourceProcessFiles",
				"SourceProcessFiles derive(order_id = 1) ~> derivedColumn1",
				"derivedColumn1 window(over(order_id),",
				"     asc(order_id, true),",
				"     id = rowNumber()) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['drop table if exists Temp_Raw_GA_Snapshot','CREATE TABLE Temp_Raw_GA_Snapshot(\\n     Column_1 varchar(80) null\\n     , Column_2 varchar(80) null\\n     , Column_3 varchar(80) null\\n     , Column_4 varchar(80) null\\n     , Column_5 varchar(80) null\\n     , Column_6 varchar(80) null\\n     , Column_7 varchar(80) null\\n    , id int not null\\n)'],",
				"     postSQLs:['with getColNo as (\\n    select top 1\\n        id\\n    from Temp_Raw_GA_Snapshot\\n    where trim(Column_2) = \\'New users\\'\\n    and trim(Column_1) = \\'Nth day\\'    \\n)\\n, date_extract as (\\n    select top 1\\n        cast(right((select Column_1 from Temp_Raw_GA_Snapshot where id = (b.id - 2)), 8) as date) as start_date\\n        , cast(right((select Column_1 from Temp_Raw_GA_Snapshot where id = (b.id - 1)), 8) as date) as end_date\\n        , b.id as select_id\\n    from Temp_Raw_GA_Snapshot a\\n    cross join getColNo b\\n)\\n, date_range as ( \\n    select \\n        start_date\\n        , end_date\\n        , datediff(day, start_date, end_date) as no_days\\n        , select_id\\n    from date_extract\\n)\\n, final_ext as (\\n    select\\n    cast(dateadd(day, cast(a.Column_1 as int), b.start_date) as datetime) as date\\n    , cast(trim(a.Column_2) as int) as val\\n    , trim(a.Column_2) as val_exclusion\\n    from Temp_Raw_GA_Snapshot a\\n    cross join date_range b\\n    where a.id between (b.select_id + 1) and (b.no_days + (b.select_id + 1))\\n)\\n, final_table as (\\n    select \\n        date \\n        , val\\n    from final_ext\\n    where val_exclusion != \\'0\\' \\n)\\n\\n--select * from final_table   \\n\\nMERGE INTO Changemakers_Combined_Overview a\\nUSING final_table b\\n    ON a.channel = \\'Website\\' \\n    and a.sub_channel = \\'Digital Changemakers Hub\\'\\n    and a.date = b.date \\nWHEN MATCHED THEN\\n  UPDATE SET a.users = b.val\\nWHEN NOT MATCHED THEN\\n  INSERT (channel,sub_channel,content, date, month, month_year, week, day_week, week_type, time_day,users)\\n  VALUES (\\n        \\'Website\\'\\n        , \\'Digital Changemakers Hub\\'\\n        , \\'Unspecified\\'\\n        , b.date\\n        , datename(month, b.date)\\n        , concat(datename(month, b.date), \\' \\', year(b.date))\\n        , concat(datename(month, b.date), \\' \\', year(b.date), \\' Week \\', (DATEPART(week, b.date) - DATEPART(week, DATEADD(day, 1, EOMONTH(b.date, -1)))) + 1)\\n        , datename(dw, b.date)\\n        , case when datename(dw, b.date) in (\\'Saturday\\', \\'Sunday\\') then \\'Weekend\\' else \\'Weekday\\' end\\n        , \\'Unspecified\\'\\n        , b.val\\n        );','drop table if exists Temp_Raw_GA_Snapshot;'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Column_1,",
				"          Column_2,",
				"          Column_3,",
				"          Column_4,",
				"          id",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}